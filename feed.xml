<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://kiros33.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kiros33.github.io/" rel="alternate" type="text/html" /><updated>2018-06-29T12:11:17+09:00</updated><id>https://kiros33.github.io/</id><title type="html">배저씨네</title><subtitle>넓고 얕은 지식을 지향하는 무식한 개발자</subtitle><entry><title type="html">터미널의 sudo 명령 사용시 맥의 터치아이디를 통해 인증하는 방법</title><link href="https://kiros33.github.io/20180625014756-cb9879e0e0e48d1ca070b54896f94a75" rel="alternate" type="text/html" title="터미널의 sudo 명령 사용시 맥의 터치아이디를 통해 인증하는 방법" /><published>2018-06-25T01:49:59+09:00</published><updated>2018-06-25T01:49:59+09:00</updated><id>https://kiros33.github.io/20180625014756-cb9879e0e0e48d1ca070b54896f94a75</id><content type="html" xml:base="https://kiros33.github.io/20180625014756-cb9879e0e0e48d1ca070b54896f94a75">&lt;h1 id=&quot;이글은-아래-주소를-참고하여-작성하였습니다&quot;&gt;이글은 아래 주소를 참고하여 작성하였습니다.&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.imore.com/how-use-sudo-your-mac-touch-id&quot;&gt;How to use sudo with Touch ID on your Mac&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;터미널에서 sudo 명령을 사용하는 경우 일반적으로 키보드를 통해 암호를 입력하는 방식을 사용합니다.&lt;/p&gt;

&lt;p&gt;하지만 Touch ID를 내장하고 있는 맥이라면 이를 활용할 수 있는 방법이 있어 소개합니다.&lt;/p&gt;

&lt;h3 id=&quot;macbook-pro-with-touch-id-에서-sudo-명령시-touch-id를-활성화하는-방법&quot;&gt;Macbook Pro with Touch ID 에서 sudo 명령시 Touch ID를 활성화하는 방법&lt;/h3&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;파인더에서 이동(&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMAND&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;SHIFT&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;G&lt;/code&gt;)하기로 /etc/pam.d/sudo 파일로 이동&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정보창(&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMAND&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;)을 열기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;좌측 하단의 열쇠모양의 잠금 아이콘을 클릭해서 잠금 해제&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인증정보를 입력하거나 Touch ID로 인증&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;하단의 공유 및 권한(Saring &amp;amp; Permissions) 중 everyone 을 &lt;strong&gt;Read Only&lt;/strong&gt;에서 &lt;strong&gt;Read &amp;amp; Write&lt;/strong&gt; 로 변경&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;텍스트 편집 프로그램으로 sudo 파일을 오픈&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;auth       sufficient     pam_tid.so&lt;/code&gt; 내용을 두번째 줄에 붙여넣기
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# sudo: auth account password session
auth       sufficient     pam_tid.so
auth       sufficient     pam_smartcard.so
auth       required       pam_opendirectory.so
account    required       pam_permit.so
password   required       pam_deny.so
session    required       pam_permit.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sudo 파일을 저장하고 닫기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정보창(&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMAND&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;)을 열기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;권한을 &lt;strong&gt;Read Only&lt;/strong&gt;로 변경하고 잠금 아이콘을 클릭해서 다시 잠금&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이제 &lt;em&gt;sudo&lt;/em&gt;를 포함한 명령 사용시 Touch ID로 인증이 가능합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;늦은시간 귀차니즘으로 스크린샷을 생략하고 작성하였습니다. 질문이 있다면 하단에 댓글로 작성해주시면 답변드리겠습니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sangyong Bae</name></author><category term="Mac" /><category term="Terminal" /><category term="sudo" /><summary type="html">이글은 아래 주소를 참고하여 작성하였습니다. How to use sudo with Touch ID on your Mac</summary></entry><entry><title type="html">부천시 특고압의 학교앞 매설 반대 국민청원</title><link href="https://kiros33.github.io/20180606001200-558062fd40c11db3f0103bff12927849" rel="alternate" type="text/html" title="부천시 특고압의 학교앞 매설 반대 국민청원" /><published>2018-06-06T00:12:00+09:00</published><updated>2018-06-06T00:12:00+09:00</updated><id>https://kiros33.github.io/20180606001200-558062fd40c11db3f0103bff12927849</id><content type="html" xml:base="https://kiros33.github.io/20180606001200-558062fd40c11db3f0103bff12927849">&lt;p&gt;부천시 특고압의 학교앞 매설 반대 국민청원에 대한 정보를 공유합니다.&lt;/p&gt;

&lt;p&gt;밀집지 우회 가능하도록 힘을 보태주세요.&lt;/p&gt;

&lt;p&gt;기술적인 안정성과 비용적인 측면을 &lt;em&gt;대한민국의 미래인&lt;/em&gt; 아이들에게 잣대로 들이밀지 않았으면 좋겠습니다.&lt;/p&gt;

&lt;h6 id=&quot;국민청원-바로가기&quot;&gt;국민청원 바로가기&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www1.president.go.kr/petitions/246465&quot;&gt;국민청원 - 초등학교 앞 지하 8m에 499kV 특고압 매립 막아주세요&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;관련기사&quot;&gt;관련기사&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://m.kyeonggi.com/?mod=news&amp;amp;act=articleView&amp;amp;idxno=1474180&quot;&gt;경기일보 - 한전, 특고압 전선 매설 ‘쉬쉬’… 부평 삼산동 주민 거센 반발&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://news.joins.com/article/22682616&quot;&gt;중앙일보 - 한전·부천시 ‘스쿨존 특고압선 매설’ 갈등&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bcmaeil.com/bcmaeil/news/?pageUrl=news_view&amp;amp;section=2&amp;amp;news_num=9081&quot;&gt;부천매일 - 상동신도시 8m 특고압…공청회에서 본 ‘문제의 핵심’&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sangyong Bae</name></author><category term="부천시" /><summary type="html">부천시 특고압의 학교앞 매설 반대 국민청원에 대한 정보를 공유합니다.</summary></entry><entry><title type="html">JEKYLL에 gulp로 CSS 적용하는 방법;</title><link href="https://kiros33.github.io/20180531125345-bcb9d675a3c2ea47ee45c3b5bcc1605c" rel="alternate" type="text/html" title="JEKYLL에 gulp로 CSS 적용하는 방법;" /><published>2018-05-31T12:55:36+09:00</published><updated>2018-05-31T12:55:36+09:00</updated><id>https://kiros33.github.io/20180531125345-bcb9d675a3c2ea47ee45c3b5bcc1605c</id><content type="html" xml:base="https://kiros33.github.io/20180531125345-bcb9d675a3c2ea47ee45c3b5bcc1605c">&lt;h3 id=&quot;jekyll에서-gulp-사용하는-방법&quot;&gt;Jekyll에서 Gulp 사용하는 방법&lt;/h3&gt;
&lt;p&gt; &lt;br /&gt;
FI 개발에 익숙하지 않으시면 CSS 변경 적용이 어려울 수도 있겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Node 설치합니다. 보통 npm도 같이 설치됨&lt;/li&gt;
  &lt;li&gt;걸프를 전역으로 설치합니다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  npm install gulp-cli &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Jekyll Source Folder&lt;/strong&gt;로 이동합니다. gulpfile.js 파일이 있는 위치입니다.&lt;/li&gt;
  &lt;li&gt;패키지를 설치합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; 혹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -save-dev gulp gulp-util&lt;/code&gt; 명령을 사용하면 됩니다.&lt;/li&gt;
  &lt;li&gt;이제 명령창에서 gulp를 입력하면 프로그램이 실행되고 변경된 css를 감지해서 minifiy 합니다. minify된 css는 built 폴더로 저장됩니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1563133/40760528-272c1c6a-64d2-11e8-80c8-af1108b9b761.png&quot; alt=&quot;gulp 동작 샘플&quot; /&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="jekyll" /><category term="CSS" /><category term="GULP" /><summary type="html">Jekyll에서 Gulp 사용하는 방법   FI 개발에 익숙하지 않으시면 CSS 변경 적용이 어려울 수도 있겠습니다.</summary></entry><entry><title type="html">빈 디렉토리를 git에 추가하는 방법</title><link href="https://kiros33.github.io/20180523001415-1fc3cd5dbab80eb9671a3e2dbfaddb6e" rel="alternate" type="text/html" title="빈 디렉토리를 git에 추가하는 방법" /><published>2018-05-23T00:18:07+09:00</published><updated>2018-05-23T00:18:07+09:00</updated><id>https://kiros33.github.io/20180523001415-1fc3cd5dbab80eb9671a3e2dbfaddb6e</id><content type="html" xml:base="https://kiros33.github.io/20180523001415-1fc3cd5dbab80eb9671a3e2dbfaddb6e">&lt;p&gt;obj 혹은 lib 디렉토리 처럼 빌드에 필요한 경우 사용하지만 버전 관리에는 넣고 싶지 않은 경우가 있습니다.&lt;/p&gt;

&lt;p&gt;이럴땐 &lt;code class=&quot;highlighter-rouge&quot;&gt;make clean&lt;/code&gt; 과 같이 불필요한 파일을 제거 한 뒤 &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 을 하게됩니다.&lt;/p&gt;

&lt;p&gt;하지만 디렉토리가 비어있는 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; 명령으로 추가되지 않습니다. 추가되지 않은 디렉토리를 다음과 같이 다른 개발환경에서 빌드하고자 할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;No such file or directory&lt;/code&gt; 오류가 발생합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  small compiler git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ make
make sc
make[1]: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/kiros33/Projects/ADDB/poc-yacc/small compiler&lt;span class=&quot;s1&quot;&gt;'
bison -d src/grammar.y --output=src/grammar.tab.c
flex -o src/lex.yy.c src/lex.l
g++ -c -std=gnu++11 -Iinc -o obj/grammar.tab.o src/grammar.tab.c
Assembler messages:
Fatal error: can'&lt;/span&gt;t create obj/grammar.tab.o: No such file or directory
make[1]: &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;obj/grammar.tab.o] Error 1
make[1]: Leaving directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/kiros33/Projects/ADDB/poc-yacc/small compiler&lt;span class=&quot;s1&quot;&gt;'
make: *** [all] Error 2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;일일이 mkdir 해줄 수 없는 일이고 굳이 불필요한 파일을 추가할 수도 없습니다. 이럴 땐 비어있는 디렉토리 전체를 찾아서 &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; 파일을 추가해주면 해결됩니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; .git &lt;span class=&quot;nt&quot;&gt;-prune&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; d &lt;span class=&quot;nt&quot;&gt;-empty&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-exec&lt;/span&gt; touch &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;/.gitignore &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Sangyong Bae</name></author><category term="git" /><summary type="html">obj 혹은 lib 디렉토리 처럼 빌드에 필요한 경우 사용하지만 버전 관리에는 넣고 싶지 않은 경우가 있습니다.</summary></entry><entry><title type="html">두번째 글</title><link href="https://kiros33.github.io/20180518125941-54b9abca45f4b601e56718739fd46ec5" rel="alternate" type="text/html" title="두번째 글" /><published>2018-05-18T13:25:07+09:00</published><updated>2018-05-18T13:25:07+09:00</updated><id>https://kiros33.github.io/20180518125941-54b9abca45f4b601e56718739fd46ec5</id><content type="html" xml:base="https://kiros33.github.io/20180518125941-54b9abca45f4b601e56718739fd46ec5">&lt;p&gt;Hey! Welcome to Ghost, it’s great to have you :)&lt;/p&gt;

&lt;p&gt;while :; do clear; ls *.html; sleep 1; done&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="일상" /><summary type="html">Hey! Welcome to Ghost, it’s great to have you :)</summary></entry><entry><title type="html">맥에서 GitHub Page와 Jekyll 연동한 블로깅 시작하기</title><link href="https://kiros33.github.io/20180517215548-d0031171c9d2b279074870e10164cfd1" rel="alternate" type="text/html" title="맥에서 GitHub Page와 Jekyll 연동한 블로깅 시작하기" /><published>2018-05-17T21:55:48+09:00</published><updated>2018-05-17T21:55:48+09:00</updated><id>https://kiros33.github.io/20180517215548-d0031171c9d2b279074870e10164cfd1</id><content type="html" xml:base="https://kiros33.github.io/20180517215548-d0031171c9d2b279074870e10164cfd1">&lt;h3 id=&quot;최초의-블로깅&quot;&gt;최초의 블로깅&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;와 &lt;strong&gt;Jekyll&lt;/strong&gt;을 연동하여 블로깅을 시작함&lt;/p&gt;

&lt;p&gt;javascript highlight&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;syntaxHighlight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_iPhone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_chrome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;iphone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;_iPhone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;chrome&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;_chrome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bash highlight&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  kiros33.github.io git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; git push
Counting objects: 6, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Delta compression using up to 4 threads.
Compressing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6/6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Writing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6/6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 46.26 KiB | 23.13 MiB/s, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Total 6 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, reused 0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
remote: Resolving deltas: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4/4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, completed with 4 &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;objects.
To github.com:kiros33/kiros33.github.io.git
   796e219..a570287  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;python highlight&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;base64&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;error_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'[+] use: $python Base64EnDecoder.py -e [file] -o [file]'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'[+] use: $python Base64EnDecoder.py -d [file] -o [file]'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;error_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'[*] error: file does NOT exist.'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b64decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'[*] error: input option is &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; or &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;error_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'[*] error: incorrect padding'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-o'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'[*] error: output option is &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-o&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;error_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Sangyong Bae</name></author><category term="macOS" /><category term="GitHub" /><category term="Jekyll" /><summary type="html">최초의 블로깅</summary></entry><entry><title type="html">작고 간편한 개발툴 DEV-C++</title><link href="https://kiros33.github.io/20180115181350-1fba1e5e95e10f4f0d16b066d136d908" rel="alternate" type="text/html" title="작고 간편한 개발툴 DEV-C++" /><published>2018-01-15T18:13:50+09:00</published><updated>2018-01-15T18:13:50+09:00</updated><id>https://kiros33.github.io/20180115181350-1fba1e5e95e10f4f0d16b066d136d908</id><content type="html" xml:base="https://kiros33.github.io/20180115181350-1fba1e5e95e10f4f0d16b066d136d908">&lt;h6 id=&quot;revision-history&quot;&gt;Revision history&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;작성시간&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;작성내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2018-01-15 18:13:50&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;최초작성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2018-01-15 20:17:10&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Windows 8 오류 해결된 folk 프로젝트 추가&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;home-page&quot;&gt;Home Page&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bloodshed.net/devcpp.html&quot;&gt;http://www.bloodshed.net/devcpp.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;윈도우에서 C/C++ 개발에 활용할 수 있는 작고 간편한 개발툴 DEV-C++ 를 소개합니다.&lt;/p&gt;

&lt;p&gt;크기도 작고 쉽게 학습/개발 할 수 있는 C/C++ 개발 IDE로 GCC 기반으로 GUI 기능을 보완해놓은 개발 도구입니다.&lt;/p&gt;

&lt;p&gt;SourceForge 프로젝트 사이트에서 다운로드 받아서 사용하면 됩니다.
&lt;a href=&quot;https://sourceforge.net/projects/dev-cpp/&quot;&gt;https://sourceforge.net/projects/dev-cpp/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2018-01-15 20:17:10 - Windows 8 오류 해결된 folk 프로젝트 추가&lt;/p&gt;

  &lt;p&gt;릴리즈가 오래되서 Windows 8 부터 오류가 발생한다고 합니다. 이 때는 아래 주소의 배포 파일을 이용하시면 됩니다.
&lt;a href=&quot;https://sourceforge.net/projects/orwelldevcpp/?source=directory&quot;&gt;https://sourceforge.net/projects/orwelldevcpp/?source=directory&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;메인 화면
&lt;img src=&quot;https://dthumb-phinf.pstatic.net/?src=%22http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F99D35F355A5C700F4AE5F3%22&amp;amp;type=w1&quot; alt=&quot;메인 화면&quot; /&gt;&lt;/p&gt;

&lt;p&gt;디버깅 화면
&lt;img src=&quot;https://dthumb-phinf.pstatic.net/?src=%22http%3A%2F%2Fcfile27.uf.tistory.com%2Fimage%2F994C2E355A5C7011054720%22&amp;amp;type=w1&quot; alt=&quot;디버깅 화면&quot; /&gt;&lt;/p&gt;

&lt;p&gt;인텔리전스 기능
&lt;img src=&quot;https://dthumb-phinf.pstatic.net/?src=%22http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F9959DA355A5C7011323186%22&amp;amp;type=w1&quot; alt=&quot;인텔리전스 기능&quot; /&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="IDE" /><category term="Windows" /><category term="C/C++" /><summary type="html">Revision history</summary></entry><entry><title type="html">Welcome to Ghost</title><link href="https://kiros33.github.io/welcome" rel="alternate" type="text/html" title="Welcome to Ghost" /><published>2017-07-27T19:00:00+09:00</published><updated>2017-07-27T19:00:00+09:00</updated><id>https://kiros33.github.io/welcome</id><content type="html" xml:base="https://kiros33.github.io/welcome">&lt;p&gt;Hey! Welcome to Ghost, it’s great to have you :)&lt;/p&gt;

&lt;p&gt;We know that first impressions are important, so we’ve populated your new site with some initial &lt;strong&gt;Getting Started&lt;/strong&gt; posts that will help you get familiar with everything in no time. This is the first one!&lt;/p&gt;

&lt;h3 id=&quot;there-are-a-few-things-that-you-should-know-up-front&quot;&gt;There are a few things that you should know up-front:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Ghost is designed for ambitious, professional publishers who want to actively build a business around their content. That’s who it works best for. If you’re using Ghost for some other purpose, that’s fine too - but it might not be the best choice for you.&lt;/li&gt;
  &lt;li&gt;The entire platform can be modified and customized to suit your needs, which is very powerful, but doing so &lt;strong&gt;does&lt;/strong&gt; require some knowledge of code. Ghost is not necessarily a good platform for beginners or people who just want a simple personal blog.&lt;/li&gt;
  &lt;li&gt;For the best experience we recommend downloading the Ghost Desktop App for your computer, which is the best way to access your Ghost site on a desktop device.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ghost is made by an independent non-profit organisation called the Ghost Foundation. We are 100% self funded by revenue from our &lt;a href=&quot;https://ghost.org/pricing&quot;&gt;Ghost(Pro)&lt;/a&gt; service, and every penny we make is re-invested into funding further development of free, open source technology for modern journalism.&lt;/p&gt;

&lt;p&gt;The main thing you’ll want to read about next is probably: &lt;a href=&quot;https://demo.ghost.io/the-editor/&quot;&gt;the Ghost editor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you’re done reading, you can simply delete the default &lt;strong&gt;Ghost&lt;/strong&gt; user from your team to remove all of these introductory posts!&lt;/p&gt;</content><author><name>Ghost</name></author><category term="Getting started" /><summary type="html">Hey! Welcome to Ghost, it’s great to have you :)</summary></entry><entry><title type="html">Using the Ghost editor</title><link href="https://kiros33.github.io/the-editor" rel="alternate" type="text/html" title="Using the Ghost editor" /><published>2017-07-27T18:00:00+09:00</published><updated>2017-07-27T18:00:00+09:00</updated><id>https://kiros33.github.io/the-editor</id><content type="html" xml:base="https://kiros33.github.io/the-editor">&lt;p&gt;Ghost uses a language called &lt;strong&gt;Markdown&lt;/strong&gt; to format text.&lt;/p&gt;
&lt;p&gt;When you go to edit a post and see special characters and colours intertwined between the words, those are Markdown shortcuts which tell Ghost what to do with the words in your document. The biggest benefit of Markdown is that you can quickly apply formatting as you type, without needing to pause.&lt;/p&gt;
&lt;p&gt;At the bottom of the editor, you'll find a toolbar with basic formatting options to help you get started as easily as possible. You'll also notice that there's a &lt;strong&gt;?&lt;/strong&gt; icon, which contains more advanced shortcuts.&lt;/p&gt;
&lt;p&gt;For now, though, let's run you through some of the basics. You'll want to make sure you're editing this post in order to see all the Markdown we've used.&lt;/p&gt;
&lt;h2 id=&quot;formattingtext&quot;&gt;Formatting text&lt;/h2&gt;
&lt;p&gt;The most common shortcuts are of course, &lt;strong&gt;bold&lt;/strong&gt; text, &lt;em&gt;italic&lt;/em&gt; text, and &lt;a href=&quot;https://example.com&quot;&gt;hyperlinks&lt;/a&gt;. These generally make up the bulk of any document. You can type the characters out, but you can also use keyboard shortcuts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMD/Ctrl + B&lt;/code&gt; for Bold&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMD/Ctrl + I&lt;/code&gt; for Italic&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMD/Ctrl + K&lt;/code&gt; for a Link&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMD/Ctrl + H&lt;/code&gt; for a Heading (Press multiple times for h2/h3/h4/etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With just a couple of extra characters here and there, you're well on your way to creating a beautifully formatted story.&lt;/p&gt;
&lt;h2 id=&quot;insertingimages&quot;&gt;Inserting images&lt;/h2&gt;
&lt;p&gt;Images in Markdown look just the same as links, except they're prefixed with an exclamation mark, like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;![Image description](/path/to/image.jpg)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://casper.ghost.org/v1.0.0/images/computer.jpg&quot; alt=&quot;Computer&quot;&gt;&lt;/p&gt;
&lt;p&gt;Most Markdown editors don't make you type this out, though. In Ghost you can click on the image icon in the toolbar at the bottom of the editor, or you can just click and drag an image from your desktop directly into the editor. Both will upload the image for you and generate the appropriate Markdown.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Important Note:&lt;/strong&gt; Ghost does not currently have automatic image resizing, so it's always a good idea to make sure your images aren't gigantic files &lt;strong&gt;before&lt;/strong&gt; uploading them to Ghost.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;makinglists&quot;&gt;Making lists&lt;/h2&gt;
&lt;p&gt;Lists in HTML are a formatting nightmare, but in Markdown they become an absolute breeze with just a couple of characters and a bit of smart automation. For numbered lists, just write out the numbers. For bullet lists, just use &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt;. Like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Crack the eggs over a bowl&lt;/li&gt;
&lt;li&gt;Whisk them together&lt;/li&gt;
&lt;li&gt;Make an omellete&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remember to buy milk&lt;/li&gt;
&lt;li&gt;Feed the cat&lt;/li&gt;
&lt;li&gt;Come up with idea for next story&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;addingquotes&quot;&gt;Adding quotes&lt;/h2&gt;
&lt;p&gt;When you want to pull out a particularly good except in the middle of a piece, you can use &lt;code&gt;&amp;gt;&lt;/code&gt; at the beginning of a paragraph to turn it into a Blockquote. You might've seen this formatting before in email clients.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A well placed quote guides a reader through a story, helping them to understand the most important points being made&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All themes handles blockquotes slightly differently. Sometimes they'll look better kept shorter, while other times you can quote fairly hefty amounts of text and get away with it. Generally, the safest option is to use blockquotes sparingly.&lt;/p&gt;
&lt;h2 id=&quot;dividingthingsup&quot;&gt;Dividing things up&lt;/h2&gt;
&lt;p&gt;If you're writing a piece in parts and you just feel like you need to divide a couple of sections distinctly from each other, a horizontal rule might be just what you need. Dropping &lt;code&gt;---&lt;/code&gt; on a new line will create a sleak divider, anywhere you want it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This should get you going with the vast majority of what you need to do in the editor, but if you're still curious about more advanced tips then check out the &lt;a href=&quot;/advanced-markdown/&quot;&gt;Advanced Markdown Guide&lt;/a&gt; - or if you'd rather learn about how Ghost taxononomies work, we've got a overview of &lt;a href=&quot;/using-tags/&quot;&gt;how to use Ghost tags&lt;/a&gt;.&lt;/p&gt;</content><author><name>Ghost</name></author><category term="Getting started" /><summary type="html">Ghost uses a language called Markdown to format text. When you go to edit a post and see special characters and colours intertwined between the words, those are Markdown shortcuts which tell Ghost what to do with the words in your document. The biggest benefit of Markdown is that you can quickly apply formatting as you type, without needing to pause. At the bottom of the editor, you'll find a toolbar with basic formatting options to help you get started as easily as possible. You'll also notice that there's a ? icon, which contains more advanced shortcuts. For now, though, let's run you through some of the basics. You'll want to make sure you're editing this post in order to see all the Markdown we've used. Formatting text The most common shortcuts are of course, bold text, italic text, and hyperlinks. These generally make up the bulk of any document. You can type the characters out, but you can also use keyboard shortcuts. CMD/Ctrl + B for Bold CMD/Ctrl + I for Italic CMD/Ctrl + K for a Link CMD/Ctrl + H for a Heading (Press multiple times for h2/h3/h4/etc) With just a couple of extra characters here and there, you're well on your way to creating a beautifully formatted story. Inserting images Images in Markdown look just the same as links, except they're prefixed with an exclamation mark, like this: ![Image description](/path/to/image.jpg) Most Markdown editors don't make you type this out, though. In Ghost you can click on the image icon in the toolbar at the bottom of the editor, or you can just click and drag an image from your desktop directly into the editor. Both will upload the image for you and generate the appropriate Markdown. Important Note: Ghost does not currently have automatic image resizing, so it's always a good idea to make sure your images aren't gigantic files before uploading them to Ghost. Making lists Lists in HTML are a formatting nightmare, but in Markdown they become an absolute breeze with just a couple of characters and a bit of smart automation. For numbered lists, just write out the numbers. For bullet lists, just use * or - or +. Like this: Crack the eggs over a bowl Whisk them together Make an omellete or Remember to buy milk Feed the cat Come up with idea for next story Adding quotes When you want to pull out a particularly good except in the middle of a piece, you can use &amp;gt; at the beginning of a paragraph to turn it into a Blockquote. You might've seen this formatting before in email clients. A well placed quote guides a reader through a story, helping them to understand the most important points being made All themes handles blockquotes slightly differently. Sometimes they'll look better kept shorter, while other times you can quote fairly hefty amounts of text and get away with it. Generally, the safest option is to use blockquotes sparingly. Dividing things up If you're writing a piece in parts and you just feel like you need to divide a couple of sections distinctly from each other, a horizontal rule might be just what you need. Dropping --- on a new line will create a sleak divider, anywhere you want it. This should get you going with the vast majority of what you need to do in the editor, but if you're still curious about more advanced tips then check out the Advanced Markdown Guide - or if you'd rather learn about how Ghost taxononomies work, we've got a overview of how to use Ghost tags.</summary></entry><entry><title type="html">Organising your content with tags</title><link href="https://kiros33.github.io/using-tags" rel="alternate" type="text/html" title="Organising your content with tags" /><published>2017-07-27T17:00:00+09:00</published><updated>2017-07-27T17:00:00+09:00</updated><id>https://kiros33.github.io/using-tags</id><content type="html" xml:base="https://kiros33.github.io/using-tags">&lt;p&gt;Ghost has a single, powerful organisational taxonomy, called tags.&lt;/p&gt;
&lt;p&gt;It doesn't matter whether you want to call them categories, tags, boxes, or anything else. You can think of Ghost tags a lot like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content.&lt;/p&gt;
&lt;h2 id=&quot;basictagging&quot;&gt;Basic tagging&lt;/h2&gt;
&lt;p&gt;When you write a post, you can assign tags to help differentiate between categories of content. For example, you might tag some posts with &lt;code&gt;News&lt;/code&gt; and other posts with &lt;code&gt;Cycling&lt;/code&gt;, which would create two distinct categories of content listed on &lt;code&gt;/tag/news/&lt;/code&gt; and &lt;code&gt;/tag/cycling/&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;If you tag a post with both &lt;code&gt;News&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;Cycling&lt;/code&gt; - then it appears in both sections.&lt;/p&gt;
&lt;p&gt;Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data.&lt;/p&gt;
&lt;h2 id=&quot;theprimarytag&quot;&gt;The primary tag&lt;/h2&gt;
&lt;p&gt;Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. So you can add the most important tag which you want to show up in your theme, but also add a bunch of related tags which are less important.&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;News&lt;/strong&gt;, Cycling, Bart Stevens, Extreme Sports&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;In this example, &lt;strong&gt;News&lt;/strong&gt; is the primary tag which will be displayed by the theme, but the post will also still receive all the other tags, and show up in their respective archives.&lt;/p&gt;
&lt;h2 id=&quot;privatetags&quot;&gt;Private tags&lt;/h2&gt;
&lt;p&gt;Sometimes you may want to assign a post a specific tag, but you don't necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling.&lt;/p&gt;
&lt;p&gt;For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do.&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;News&lt;/strong&gt;, Cycling, #video&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;Here, the theme would assign the post publicly displayed tags of &lt;code&gt;News&lt;/code&gt;, and &lt;code&gt;Cycling&lt;/code&gt; - but it would also keep a private record of the post being tagged with &lt;code&gt;#video&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In your theme, you could then look for private tags conditionally and give them special formatting:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;nohighlight&quot;&gt;{{#post}}
    {{#has tag=&amp;quot;#video&amp;quot;}}
        ...markup for a nice big video post layout...
    {{else}}
        ...regular markup for a post...
    {{/has}}
{{/post}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can find documentation for theme development techniques like this and many more over on Ghost's extensive &lt;a href=&quot;https://themes.ghost.org/&quot;&gt;theme documentation&lt;/a&gt;.&lt;/p&gt;</content><author><name>Ghost</name></author><category term="Getting started" /><summary type="html">Ghost has a single, powerful organisational taxonomy, called tags. It doesn't matter whether you want to call them categories, tags, boxes, or anything else. You can think of Ghost tags a lot like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content. Basic tagging When you write a post, you can assign tags to help differentiate between categories of content. For example, you might tag some posts with News and other posts with Cycling, which would create two distinct categories of content listed on /tag/news/ and /tag/cycling/, respectively. If you tag a post with both News and Cycling - then it appears in both sections. Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data. The primary tag Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. So you can add the most important tag which you want to show up in your theme, but also add a bunch of related tags which are less important. News, Cycling, Bart Stevens, Extreme Sports In this example, News is the primary tag which will be displayed by the theme, but the post will also still receive all the other tags, and show up in their respective archives. Private tags Sometimes you may want to assign a post a specific tag, but you don't necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling. For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do. News, Cycling, #video Here, the theme would assign the post publicly displayed tags of News, and Cycling - but it would also keep a private record of the post being tagged with #video. In your theme, you could then look for private tags conditionally and give them special formatting: {{#post}} {{#has tag=&amp;quot;#video&amp;quot;}} ...markup for a nice big video post layout... {{else}} ...regular markup for a post... {{/has}} {{/post}} You can find documentation for theme development techniques like this and many more over on Ghost's extensive theme documentation.</summary></entry></feed>
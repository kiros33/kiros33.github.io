<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://kiros33.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kiros33.github.io/" rel="alternate" type="text/html" /><updated>2020-04-24T18:14:48+09:00</updated><id>https://kiros33.github.io/</id><title type="html">배저씨네</title><subtitle>넓고 얕은 지식을 지향하는 무식한 개발자</subtitle><entry><title type="html">마이크로소프트 라이선스에 대해서 알아보자.</title><link href="https://kiros33.github.io/20200424075503-e4dcadf5c694e7f8b1487f5611ac84f3" rel="alternate" type="text/html" title="마이크로소프트 라이선스에 대해서 알아보자." /><published>2020-04-24T07:55:03+09:00</published><updated>2020-04-24T07:55:03+09:00</updated><id>https://kiros33.github.io/20200424075503-e4dcadf5c694e7f8b1487f5611ac84f3</id><content type="html" xml:base="https://kiros33.github.io/20200424075503-e4dcadf5c694e7f8b1487f5611ac84f3">&lt;p&gt;마이크로소프트 라이선스에 대해서…&lt;br /&gt;
(About Microsoft License)&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;마이크로소프트 라이선스 이해에&lt;br /&gt;
도움이 되는 글을&lt;br /&gt;
발췌하거나 모아 놓았습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;이미지를 클릭하면 원본 크기로 보실 수 있습니다.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-server-2019-구입-시-라이선스를-몇-개-사야-하나요&quot;&gt;&lt;a href=&quot;https://www.soft2000.com/14671&quot;&gt;Windows Server 2019 구입 시, 라이선스를 몇 개 사야 하나요?&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;간단한 소개&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;보통 소프트웨어를 구입할 때, PC 1대 당 또는 사용자 1명 당 한 개의 라이선스를 구입합니다. 예를 들어 Windows 10은 PC 1대 당 하나, Office 365는 사용자 1명 당 하나를 구입하면 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;하지만 Windows Server는 다릅니다. Windows Server는 서버에 장착된 CPU의 Core 개수만큼 라이선스를 구입합니다. 그런데, Core의 개수를 세는 방식이 좀 복잡하여, 자칫 잘못하면 라이선스를 더 사거나 덜 살 수 있습니다. 더 사면 불필요한 비용을 지출한 것이 되고, 덜 사면 라이선스 위반으로 불이익을 받을 수 있으므로, 몇 개를 사야하는지 정확히 계산하는 게 중요합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;자세한 내용은 원본글로 가시거나 유튜브 동영상을 참고하세요!&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;1180&quot; height=&quot;664&quot; src=&quot;https://www.youtube.com/embed/NU-F7vgyxd0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;assets/images/e4dcadf5c694e7f8b1487f5611ac84f3/001.jpg&quot; caption=&quot;CAL and ML&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;CAL and ML&quot; data-echo=&quot;assets/images/e4dcadf5c694e7f8b1487f5611ac84f3/001.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#마이크로소프트&lt;/code&gt;, &lt;code&gt;#라이선스&lt;/code&gt;, &lt;code&gt;#윈도우&lt;/code&gt;, &lt;code&gt;#서버&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Microsoft" /><category term="License" /><summary type="html">마이크로소프트 라이선스에 대해서… (About Microsoft License)</summary></entry><entry><title type="html">가톨릭대학교 인천성모병원 권역호스피스센터 유튜브 채널</title><link href="https://kiros33.github.io/20200423082415-f66b02dc2f58cc46226ea57e313fe2ca" rel="alternate" type="text/html" title="가톨릭대학교 인천성모병원 권역호스피스센터 유튜브 채널" /><published>2020-04-23T08:24:15+09:00</published><updated>2020-04-23T08:24:15+09:00</updated><id>https://kiros33.github.io/20200423082415-f66b02dc2f58cc46226ea57e313fe2ca</id><content type="html" xml:base="https://kiros33.github.io/20200423082415-f66b02dc2f58cc46226ea57e313fe2ca">&lt;p&gt;가톨릭대학교 인천성모병원 권역호스피스센터 유튜브 채널이 새로 생겼습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;죽음이 아닌 삶에 대한 이야기, 호스피스&lt;/p&gt;

  &lt;p&gt;삶을 더 가치 있게 만드는 마지막.&lt;br /&gt;
호스피스가 함께합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;이미지를 클릭하면 원본 크기로 보실 수 있습니다.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;assets/images/f66b02dc2f58cc46226ea57e313fe2ca/001.jpg&quot; caption=&quot;notice&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;안내문&quot; data-echo=&quot;assets/images/f66b02dc2f58cc46226ea57e313fe2ca/001.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1) 호스피스에서 일하는 사람들 #1 간호사 김현경&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/iXbfZIAmvyQ&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;code&gt;#가톨릭대학교&lt;/code&gt;, &lt;code&gt;#인천성모병원&lt;/code&gt;, &lt;code&gt;#권역호스피스센터&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Oracle" /><category term="Database" /><summary type="html">가톨릭대학교 인천성모병원 권역호스피스센터 유튜브 채널이 새로 생겼습니다.</summary></entry><entry><title type="html">Setting the NLS_LANG Environment Variable for Oracle Databases</title><link href="https://kiros33.github.io/20200422093956-6408d97e49a3f096d69f678b6aa1ea29" rel="alternate" type="text/html" title="Setting the NLS_LANG Environment Variable for Oracle Databases" /><published>2020-04-22T09:39:56+09:00</published><updated>2020-04-22T09:39:56+09:00</updated><id>https://kiros33.github.io/20200422093956-6408d97e49a3f096d69f678b6aa1ea29</id><content type="html" xml:base="https://kiros33.github.io/20200422093956-6408d97e49a3f096d69f678b6aa1ea29">&lt;p&gt;오라클 데이터베이스의 NLS_LANG 환경 변수 설정&lt;br /&gt;
(Setting the NLS_LANG Environment Variable for Oracle Databases)&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Console 이나 Client 프로그램 혹은 Apache Tomcat 등에서 Oracle Database에 접속할 때 언어 설정으로 오류가 발생할 경우 도움이 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;이미지를 클릭하면 원본 크기로 보실 수 있습니다.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;관련-오류&quot;&gt;관련 오류&lt;/h3&gt;
&lt;p&gt;1) ORA-01861: literal does not match format string&lt;/p&gt;

&lt;h3 id=&quot;관련-증상&quot;&gt;관련 증상&lt;/h3&gt;
&lt;p&gt;1) TO_CHAR() 함수 사용시 ‘YYYMMDD’ 와 같은 순서로 변환하면 오류 발생&lt;/p&gt;

&lt;h3 id=&quot;registry-수정-방법&quot;&gt;Registry 수정 방법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;오라클이 설치된 경우 레지스트리를 변경해서 해결 가능&lt;/li&gt;
  &lt;li&gt;키
    &lt;pre&gt;&lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Oracle\KEY_OraDB12Home1\NLS_LANG
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;값 (일부 예제)
    &lt;ul&gt;
      &lt;li&gt;영어: &lt;code&gt;AMERICAN_AMERICA.WE8MSWIN1252&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;한글: &lt;code&gt;KOREAN_KOREA.KO16MSWIN949&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;환경-변수&quot;&gt;환경 변수&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;LANG&lt;/code&gt;=&lt;code&gt;KO&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;NLS_LANG&lt;/code&gt;=&lt;code&gt;KOREAN_KOREA.KO16MSWIN949&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;아파치-톰캣---직접-실행&quot;&gt;아파치 톰캣 - 직접 실행&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;환경 변수가 설정된 경우 반영됨&lt;/li&gt;
  &lt;li&gt;환경 변수가 설정되지 않았다면 catalina.bat/catalina.sh 상단에 환경 변수를 직접 넣어도 정상 동작함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;아파치-톰캣---서비스&quot;&gt;아파치 톰캣 - 서비스&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;서비스 설정: 윈도우를 예로 설명
    &lt;ul&gt;
      &lt;li&gt;C:\tomcat\bin\tomcat8w.exe //ES//MYWAS&lt;/li&gt;
      &lt;li&gt;Java Options 에 아래 항목 추가
        &lt;pre&gt;&lt;code&gt;  -Duser.language=ko
  -Duser.region=KR
&lt;/code&gt;&lt;/pre&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;#오라클&lt;/code&gt;, &lt;code&gt;#데이터베이스&lt;/code&gt;, &lt;code&gt;#NLS_LANG&lt;/code&gt; &lt;code&gt;#ORA-01861&lt;/code&gt;, &lt;code&gt;#환경변수&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Oracle" /><category term="Database" /><summary type="html">오라클 데이터베이스의 NLS_LANG 환경 변수 설정 (Setting the NLS_LANG Environment Variable for Oracle Databases)</summary></entry><entry><title type="html">Listening port via Node.js</title><link href="https://kiros33.github.io/20200421174203-bec2b6d550598bc9ac42a4dba1965579" rel="alternate" type="text/html" title="Listening port via Node.js" /><published>2020-04-21T10:30:14+09:00</published><updated>2020-04-21T10:30:14+09:00</updated><id>https://kiros33.github.io/20200421174203-bec2b6d550598bc9ac42a4dba1965579</id><content type="html" xml:base="https://kiros33.github.io/20200421174203-bec2b6d550598bc9ac42a4dba1965579">&lt;p&gt;노드로 포트 열기&lt;br /&gt;
(Listening port via Node.js)&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;간단하게 Node.js 에서 포트 대기하는 방법&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;이미지를 클릭하면 원본 크기로 보실 수 있습니다.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;스크립트-예제&quot;&gt;스크립트 예제&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-node&quot;&gt;var net = require('net');

// 서버를 생성
var server = net.createServer(function(socket){
  console.log(socket.address().address + &quot; connected.&quot;);
  
  // client로 부터 오는 data를 화면에 출력
  socket.on('data', function(data){
    console.log('rcv:' + data);
    //socket.write(&quot;ok received\r\n&quot;);
    //data에는 이미 newline 문자가 포함되어있음
    socket.write(&quot;ok received, &quot; + data);
    console.log('snd:' + 'ok');
  });
  // client와 접속이 끊기는 메시지 출력
  socket.on('close', function(){
    console.log('client disconnted.');
  });
  // client가 접속하면 화면에 출력해주는 메시지
  socket.write('welcome to server\r\n');
});

// 에러가 발생할 경우 화면에 에러메시지 출력
server.on('error', function(err){
  console.log('err'+ err  );
});

// Port 5000으로 접속이 가능하도록 대기
server.listen(5000, function(){
  console.log('linsteing on 5000..');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;실행&quot;&gt;실행&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;스크립트를 실행하면 5000 포트로 대기
&lt;a href=&quot;assets/images/8c04743de29cba32929e7a997b67c67e/001.png&quot; caption=&quot;Listening&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Listening&quot; data-echo=&quot;assets/images/8c04743de29cba32929e7a997b67c67e/001.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;접속&quot;&gt;접속&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;netcat
&lt;a href=&quot;assets/images/8c04743de29cba32929e7a997b67c67e/002.png&quot; caption=&quot;Netcat Test&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Netcat Test&quot; data-echo=&quot;assets/images/8c04743de29cba32929e7a997b67c67e/002.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;전송&quot;&gt;전송&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;assets/images/8c04743de29cba32929e7a997b67c67e/003.png&quot; caption=&quot;Say Hi&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Say Hi&quot; data-echo=&quot;assets/images/8c04743de29cba32929e7a997b67c67e/003.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#포트&lt;/code&gt;, &lt;code&gt;#네트워크&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Node" /><category term="Network" /><summary type="html">노드로 포트 열기 (Listening port via Node.js)</summary></entry><entry><title type="html">Listening port via Powershell</title><link href="https://kiros33.github.io/20200421095727-d4e967ea248dba1d2ffde4c262b1f576" rel="alternate" type="text/html" title="Listening port via Powershell" /><published>2020-04-21T09:57:27+09:00</published><updated>2020-04-21T09:57:27+09:00</updated><id>https://kiros33.github.io/20200421095727-d4e967ea248dba1d2ffde4c262b1f576</id><content type="html" xml:base="https://kiros33.github.io/20200421095727-d4e967ea248dba1d2ffde4c262b1f576">&lt;p&gt;파워쉘로 포트 열기&lt;br /&gt;
(Listening port via Powershell)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;참조-사이트&quot;&gt;참조 사이트&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/YSCHGroup/SkyRAT/blob/master/assets/modules/Listen-Port.ps1&quot;&gt;SkyRAT/assets/modules/Listen-Port.ps1&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;별로 고민없이 가져다 접속 테스트에 사용했습니다.
종종 포트가 열렸는지 확인해야하는데 서버측 포트 바인딩하는게 쉽지 않을 때까 있는데 아주 유용합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;이미지를 클릭하면 원본 크기로 보실 수 있습니다.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;스크립트-예제&quot;&gt;스크립트 예제&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;$port = 24
$endpoint = new-object System.Net.IPEndPoint ([system.net.ipaddress]::any, $port)    
$listener = new-object System.Net.Sockets.TcpListener $endpoint
$listener.server.ReceiveTimeout = 3000
$listener.start()    
try {
    Write-Host &quot;Listening on port $port, press CTRL+C to cancel&quot;
    While ($true) {
        if (!$listener.Pending()) {
            Start-Sleep -Seconds 1; 
            continue; 
        }
        $client = $listener.AcceptTcpClient()
        $client.client.RemoteEndPoint | Add-Member -NotePropertyName DateTime -NotePropertyValue (get-date) -PassThru
        $client.close()
    }
}
catch {
    Write-Error $_          
}
finally{
    $listener.stop()
    Write-host &quot;Listener Closed Safely&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;실행---포트-대기&quot;&gt;실행 - 포트 대기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;스크립트를 실행하면 24 포트로 대기
&lt;a href=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/001.png&quot; caption=&quot;대기&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Listening&quot; data-echo=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/001.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;테스트&quot;&gt;테스트&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;tcping
&lt;a href=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/002.png&quot; caption=&quot;Tcping 테스트&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Tcping 테스트&quot; data-echo=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/002.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;netcat
&lt;a href=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/003.png&quot; caption=&quot;Netcat 테스트&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Netcat 테스트&quot; data-echo=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/003.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;powershell
&lt;a href=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/004.png&quot; caption=&quot;Test-Connection&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Test-Connection&quot; data-echo=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/004.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;종료&quot;&gt;종료&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/005.png&quot; caption=&quot;종료&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Terminate&quot; data-echo=&quot;assets/images/d4e967ea248dba1d2ffde4c262b1f576/005.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#파워쉘&lt;/code&gt;, &lt;code&gt;#파워셸&lt;/code&gt;, &lt;code&gt;#포트&lt;/code&gt;, &lt;code&gt;#네트워크&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Command" /><category term="Powershell" /><category term="Windows" /><category term="Network" /><summary type="html">파워쉘로 포트 열기 (Listening port via Powershell)</summary></entry><entry><title type="html">Run CMD or Powershell as Administrator</title><link href="https://kiros33.github.io/20200421103014-8c04743de29cba32929e7a997b67c67e" rel="alternate" type="text/html" title="Run CMD or Powershell as Administrator" /><published>2020-04-21T08:43:54+09:00</published><updated>2020-04-21T08:43:54+09:00</updated><id>https://kiros33.github.io/20200421103014-8c04743de29cba32929e7a997b67c67e</id><content type="html" xml:base="https://kiros33.github.io/20200421103014-8c04743de29cba32929e7a997b67c67e">&lt;p&gt;cmd.exe 나 powershell.exe 를 관리자 권한으로 실행하는 방법&lt;br /&gt;
(Run cmd.exe or powershell.exe as Administrator)&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;다음 글은 다양한 방식으로 구현하는 관리자 권한으로 실행하는 방법들 중에서 Microsoft HTML Application Host 프로그램으로 Javascript를 구동하는 방식입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;이미지를 클릭하면 원본 크기로 보실 수 있습니다.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;cmdexe-를-실행하는-스크립트&quot;&gt;cmd.exe 를 실행하는 스크립트&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;@ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions
NET SESSION &amp;gt;nul 2&amp;gt;&amp;amp;1
IF %ERRORLEVEL% NEQ 0 GOTO ELEVATE
GOTO :EOF

:ELEVATE
SET this=&quot;%CD%&quot;
SET this=!this:\=\\!

MSHTA &quot;javascript: var shell = new ActiveXObject('shell.application'); shell.ShellExecute('CMD', '/K CD /D \&quot;!this!\&quot;', '', 'runas', 1);close();&quot;
EXIT 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;powershellexe-를-실행하는-스크립트&quot;&gt;powershell.exe 를 실행하는 스크립트&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;@ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions
NET SESSION &amp;gt;nul 2&amp;gt;&amp;amp;1
IF %ERRORLEVEL% NEQ 0 GOTO ELEVATE
GOTO :EOF

:ELEVATE
SET this=&quot;%CD%&quot;
SET this=!this:\=\\!

MSHTA &quot;javascript: var shell = new ActiveXObject('shell.application'); shell.ShellExecute('POWERSHELL', '-NoExit -Command Set-Location \&quot;!this!\&quot;', '', 'runas', 1);close();&quot;
EXIT 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;실행결과&quot;&gt;실행결과&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;관리자로 실행시: 아무런 동작도 하지 않고 종료&lt;/li&gt;
  &lt;li&gt;관리자가 아니면: 관리자 권한으로 프로그램을 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;동작원리&quot;&gt;동작원리&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;NET SESSION 명령은 관리자인 경우 세션 목록을 보여준다. 하지만 관리자가 아닌 경우 액세스 거부 오류가 발생한다.&lt;/li&gt;
  &lt;li&gt;ERRORLEVEL 값이 0이면 관리자 권한으로 실행된 것이고 0이 아니면 오류가 발생(즉 관리자 계정이 아닌 경우)한다.&lt;/li&gt;
  &lt;li&gt;HTML 처리 호스트인 &lt;code&gt;MSHTA&lt;/code&gt; 프로그램으로 자바 스크립트를 구동
    &lt;ul&gt;
      &lt;li&gt;ActiveX 컴퍼넌트트 중 쉘 처리 기능을 가진 shell.application 로딩&lt;/li&gt;
      &lt;li&gt;CMD.EXE 혹은 POWERSHELL.EXE 를 실행하면서 현재 디렉토리를 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1) 스크립트를 실행하고 권한 승인을 하면
&lt;a href=&quot;assets/images/4ad5b79d57fa4e0aa14aba18707fdf4e/001.png&quot; caption=&quot;권한 상승&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Privilege Escalation&quot; data-echo=&quot;assets/images/4ad5b79d57fa4e0aa14aba18707fdf4e/001.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) 관리자 권한으로 실행된 파워쉘이 짠!!!
&lt;a href=&quot;assets/images/4ad5b79d57fa4e0aa14aba18707fdf4e/002.png&quot; caption=&quot;파워쉘&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Powershell.exe&quot; data-echo=&quot;assets/images/4ad5b79d57fa4e0aa14aba18707fdf4e/002.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#윈도우&lt;/code&gt;, &lt;code&gt;#명령줄&lt;/code&gt;, &lt;code&gt;#파워쉘&lt;/code&gt;, &lt;code&gt;#파워셸&lt;/code&gt;, &lt;code&gt;#MSHTA&lt;/code&gt;, &lt;code&gt;#자바스크립트&lt;/code&gt;, &lt;code&gt;#액티브엑스&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Command" /><category term="Powershell" /><category term="Windows" /><summary type="html">cmd.exe 나 powershell.exe 를 관리자 권한으로 실행하는 방법 (Run cmd.exe or powershell.exe as Administrator)</summary></entry><entry><title type="html">크롬 브라우저 종료시 다시 로그인을 해야하는 불편함을 해결하는 방법</title><link href="https://kiros33.github.io/20190808123219-25631e451a43a17650c2a06f03bf01b0" rel="alternate" type="text/html" title="크롬 브라우저 종료시 다시 로그인을 해야하는 불편함을 해결하는 방법" /><published>2019-08-08T03:32:19+09:00</published><updated>2019-08-08T03:32:19+09:00</updated><id>https://kiros33.github.io/20190808123219-25631e451a43a17650c2a06f03bf01b0</id><content type="html" xml:base="https://kiros33.github.io/20190808123219-25631e451a43a17650c2a06f03bf01b0">&lt;p&gt;크롬 브라우저 종료시 로컬 데이터를 삭제하는 옵션 해제하기&lt;br /&gt;
(Keep local data only until you quit your brower)&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;크롬 브라우저를 종료한 다음 다시 실행하면
동기화를 위한 로그인 및 각 사이트에 로그인했던 정보가
모두 사라지는 경우에 적용하는 방법입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;이미지를 클릭하면 원본 크기로 보실 수 있습니다.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1) 크롬을 실행하고 설정(Settings)으로 들어갑니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사이트 설정(Site Settings) 항목 선택&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;assets/images/25631e451a43a17650c2a06f03bf01b0/001.png&quot; caption=&quot;Settings&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Settings&quot; data-echo=&quot;assets/images/25631e451a43a17650c2a06f03bf01b0/001.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) 사이트 설정&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;쿠키(Cookies) 항목 선택&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;assets/images/25631e451a43a17650c2a06f03bf01b0/002.png&quot; caption=&quot;Site Settings&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Site Settings&quot; data-echo=&quot;assets/images/25631e451a43a17650c2a06f03bf01b0/002.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3) 쿠키&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;브라우저 종료시까지 로컬 데이터 유지(Keep local data only until you quit your brower) 항목을 끕니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;assets/images/25631e451a43a17650c2a06f03bf01b0/003.png&quot; caption=&quot;Cookies&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Cookies&quot; data-echo=&quot;assets/images/25631e451a43a17650c2a06f03bf01b0/003.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4) 옵션 해제&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;두세번 정도 종료 → 재실행을 통해 로그인이 유지되는지 확인, 그리고 다음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;assets/images/25631e451a43a17650c2a06f03bf01b0/004.png&quot; caption=&quot;Turnoff&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Turnoff&quot; data-echo=&quot;assets/images/25631e451a43a17650c2a06f03bf01b0/004.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#문자&lt;/code&gt;, &lt;code&gt;#SMS&lt;/code&gt;, &lt;code&gt;#불법주정차&lt;/code&gt;, &lt;code&gt;#생활상식&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Chrome" /><category term="Cookie" /><summary type="html">크롬 브라우저 종료시 로컬 데이터를 삭제하는 옵션 해제하기 (Keep local data only until you quit your brower)</summary></entry><entry><title type="html">불법주정차 문자 알림 서비스</title><link href="https://kiros33.github.io/20190214185525-5db75118bede859338ec6b48d5519bbc" rel="alternate" type="text/html" title="불법주정차 문자 알림 서비스" /><published>2019-02-14T18:55:13+09:00</published><updated>2019-02-14T18:55:13+09:00</updated><id>https://kiros33.github.io/20190214185525-5db75118bede859338ec6b48d5519bbc</id><content type="html" xml:base="https://kiros33.github.io/20190214185525-5db75118bede859338ec6b48d5519bbc">&lt;p&gt;지역별로 불법주정차 문자 알림 서비스 가입방법입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;서비스 컨텐츠는 아주… 훌륭하지만…&lt;br /&gt;
서비스 가입방법 아주… 짜증납니다…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;가입방법&quot;&gt;가입방법&lt;/h3&gt;
&lt;p&gt;1) 가입하기 버튼을 누르세요.&lt;br /&gt;
  2) &lt;strong&gt;개인정보 수집·이용·제공 동의&lt;/strong&gt; 및 &lt;strong&gt;개인정보 위탁 동의&lt;/strong&gt;를 합니다.&lt;br /&gt;
  3) 관련정보를 입력하세요. 차량번호, 이름, 전화번호 혹은 생년월일 등 조금씩 다른 경우가 있습니다.
  &lt;a href=&quot;assets/images/5db75118bede859338ec6b48d5519bbc/001.png&quot; caption=&quot;차량관련정보&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;차량관련정보&quot; data-echo=&quot;assets/images/5db75118bede859338ec6b48d5519bbc/001.840.jpg&quot; /&gt;&lt;/a&gt;
  4) 입력된 전화번호로 SMS 인증번호가 전송되면 문자인증을 완료하세요.&lt;/p&gt;

&lt;h3 id=&quot;수정방법&quot;&gt;수정방법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;가입방법의 3) 에서 입력한 정보로 로그인 할 수 있습니다. 이때도 문자인증은 거쳐야합니다.&lt;/li&gt;
  &lt;li&gt;수정후 저장하고 로그아웃 하시면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;서비스-문자내용&quot;&gt;서비스 문자내용&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이전에 수원에서 단속 예정으로 문자가 온 기록이 있네요 ^^
  &lt;a href=&quot;assets/images/5db75118bede859338ec6b48d5519bbc/002.png&quot; caption=&quot;단속예정문자&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;단속예정문자&quot; data-echo=&quot;assets/images/5db75118bede859338ec6b48d5519bbc/002.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;아래 목록에 있는 가입 페이지로 가시거나 각 지자체 서비스 가입 페이지를 검색하신 뒤 서비스를 이용하시면 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;주정차단속-문자알림-서비스-지역별-가입페이지&quot;&gt;주정차단속 문자알림 서비스 지역별 가입페이지&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전국(수원/김포/의왕)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://pvn.ts2020.kr&quot;&gt;https://pvn.ts2020.kr &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.kotsa.or.kr/pvn//home/PVNHM0101.jsp&quot;&gt;https://www.kotsa.or.kr/pvn//home/PVNHM0101.jsp&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;지역별 가입안내
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://parkingsms.wizshot.com/www/contents/join_online.php&quot;&gt;http://parkingsms.wizshot.com/www/contents/join_online.php&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인천광역시
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://parkingsms.seocho.go.kr/&quot;&gt;https://parkingsms.seocho.go.kr/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;성남시
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://parkingsms.seongnam.go.kr&quot;&gt;http://parkingsms.seongnam.go.kr&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://parkingsms.seocho.go.kr/WizshotCarControl/member/index.php&quot;&gt;https://parkingsms.seocho.go.kr/WizshotCarControl/member/index.php&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;서초구
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://parkingsms.seocho.go.kr&quot;&gt;https://parkingsms.seocho.go.kr&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부천시
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://parkingsms.bucheon.go.kr&quot;&gt;https://parkingsms.bucheon.go.kr&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;#문자&lt;/code&gt;, &lt;code&gt;#SMS&lt;/code&gt;, &lt;code&gt;#불법주정차&lt;/code&gt;, &lt;code&gt;#생활상식&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="생활상식" /><summary type="html">지역별로 불법주정차 문자 알림 서비스 가입방법입니다.</summary></entry><entry><title type="html">Mgoon, Vine, Twitter, Youku, Vimeo, Facebook, Dailymotion 사이트의 비디오 다운로드 방법</title><link href="https://kiros33.github.io/20190114171435-74255a158f882511e95bb007d40184ff" rel="alternate" type="text/html" title="Mgoon, Vine, Twitter, Youku, Vimeo, Facebook, Dailymotion 사이트의 비디오 다운로드 방법" /><published>2019-01-14T17:14:37+09:00</published><updated>2019-01-14T17:14:37+09:00</updated><id>https://kiros33.github.io/20190114171435-74255a158f882511e95bb007d40184ff</id><content type="html" xml:base="https://kiros33.github.io/20190114171435-74255a158f882511e95bb007d40184ff">&lt;p&gt;Mgoon, Vine, Twitter, Youku, Vimeo, Facebook, Dailymotion 등의 비디오를 쉽게 다운로드하는 방법&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;와이프가 영화를 찾아 달라는데 OTT나 DVD를 찾아봐도 없고 마침 3년전 데일리모션에 올라온게 보여서 다운로드하는 과정을 기록했습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;그냥 넘어가기도 그렇고 먼저 간단히 영화소개를 하자면 2001년에 개봉한 영화 Wit 입니다.&lt;/p&gt;

  &lt;p&gt;저명한 영문학 교수로 활동하고 있던 베어링 교수가 난소암 3기 판정을 받고 8주간의 치료요법을 받게 되면서 시작하는 내용입니다. 구글 검색에 나오는 좋아요는 86%로 준수합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이제 본론으로!!!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;이미지를 클릭하면 원본 크기로 보실 수 있습니다.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;다운로드 할 동영상을 확인하고 URL을 복사합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dailymotion.com/video/x3njbpl&quot;&gt;https://www.dailymotion.com/video/x3njbpl&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;assets/images/74255a158f882511e95bb007d40184ff/001.png&quot; caption=&quot;비디오 선택&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;비디오 선택&quot; data-echo=&quot;assets/images/74255a158f882511e95bb007d40184ff/001.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://savevideo.me/&quot;&gt;savevideo.me&lt;/a&gt; 사이트에 접속합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://savevideo.me/&quot;&gt;http://savevideo.me/&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;assets/images/74255a158f882511e95bb007d40184ff/002.png&quot; caption=&quot;북마크 등록&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;북마크 등록&quot; data-echo=&quot;assets/images/74255a158f882511e95bb007d40184ff/002.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;비디오 주소를 입력하고&lt;/li&gt;
      &lt;li&gt;다운로드를 클릭한 뒤&lt;/li&gt;
      &lt;li&gt;북마크를 등록합니다. 브라우저별 설명을 보시면 상세히 설명되어 있습니다.
        &lt;ul&gt;
          &lt;li&gt;Firefox (&lt;a href=&quot;http://savevideo.me/faq/#19&quot;&gt;FAQ&lt;/a&gt;), Safari (&lt;a href=&quot;http://savevideo.me/faq/#20&quot;&gt;FAQ&lt;/a&gt;), Chrome (&lt;a href=&quot;http://savevideo.me/faq/#22&quot;&gt;FAQ&lt;/a&gt;)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;이 URL을 엽니다. 우측의 링크를 클릭해서 다시 데일리모션 사이트로 이동합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;동영상을 다운로드합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;원하는 동영상의 &lt;code&gt;동영상 내려받기&lt;/code&gt;를 우측 버튼 클릭 후 다른이름으로 저장하면 됩니다.&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;assets/images/74255a158f882511e95bb007d40184ff/003.png&quot; caption=&quot;비디오 다운로드&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;비디오 다운로드&quot; data-echo=&quot;assets/images/74255a158f882511e95bb007d40184ff/003.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;속도가 조금 느려서 오래걸리니 다른 작업을 하거나 동영상이라도 보고 있으면 되겠네요.&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;assets/images/74255a158f882511e95bb007d40184ff/004.png&quot; caption=&quot;다운로드 속도&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;다운로드 속도&quot; data-echo=&quot;assets/images/74255a158f882511e95bb007d40184ff/004.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;#Mgoon&lt;/code&gt;, &lt;code&gt;#Vine&lt;/code&gt;, &lt;code&gt;#Twitter&lt;/code&gt;, &lt;code&gt;#Youku&lt;/code&gt;, &lt;code&gt;#Vimeo&lt;/code&gt;, &lt;code&gt;#Facebook&lt;/code&gt;, &lt;code&gt;#Dailymotion&lt;/code&gt;, &lt;code&gt;#Video&lt;/code&gt;, &lt;code&gt;#Download&lt;/code&gt;, &lt;code&gt;#엠군&lt;/code&gt;, &lt;code&gt;#바인&lt;/code&gt;, &lt;code&gt;#트위터&lt;/code&gt;, &lt;code&gt;#유쿠&lt;/code&gt;, &lt;code&gt;#비메오&lt;/code&gt;, &lt;code&gt;#페이스북&lt;/code&gt;, &lt;code&gt;#데일리모션&lt;/code&gt;, &lt;code&gt;#비디오&lt;/code&gt;, &lt;code&gt;#다운로드&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Download" /><category term="Video" /><summary type="html">Mgoon, Vine, Twitter, Youku, Vimeo, Facebook, Dailymotion 등의 비디오를 쉽게 다운로드하는 방법</summary></entry><entry><title type="html">오라클 라이브 SQL 소개</title><link href="https://kiros33.github.io/20190110135444-42c48740a84b48f6336e2d7585a56f74" rel="alternate" type="text/html" title="오라클 라이브 SQL 소개" /><published>2019-01-10T13:57:05+09:00</published><updated>2019-01-10T13:57:05+09:00</updated><id>https://kiros33.github.io/20190110135444-42c48740a84b48f6336e2d7585a56f74</id><content type="html" xml:base="https://kiros33.github.io/20190110135444-42c48740a84b48f6336e2d7585a56f74">&lt;p&gt;&lt;strong&gt;Oracle Live SQL을 소개합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;오라클&lt;/strong&gt;을 설치하고 &lt;code&gt;Sample schema&lt;/code&gt;를 추가하는 것은 개발자라면 기본으로 할 수 있어야 할 것입니다!&lt;/p&gt;

&lt;p&gt;그렇다고 테스트나 학습을 위해 필요할 때마다 서버를 만드는 것은 참으로 고욕입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;공통으로 사용할 수 있는 테스트 서버의 경우는 마음대로 데이터베이스나 테이블을 다루기 힘들고&lt;/li&gt;
  &lt;li&gt;개인 서버를 운용하자니 번거롭기도 하고 리소스가 부족하기도 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이럴때 간단한 테스트나 학습용으로 이용하기 좋은 오라클 서비스를 소개합니다.&lt;/p&gt;

&lt;h3 id=&quot;목차&quot;&gt;목차&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;#기본-사용법&quot;&gt;기본 사용법&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#테이블-직접-생성하여-사용하는-방법&quot;&gt;테이블 직접 생성하여 사용하는 방법&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#기본-스키마를-사용하는-방법&quot;&gt;기본 스키마를 사용하는 방법&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#기타&quot;&gt;기타&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;기본-사용법&quot;&gt;기본 사용법&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;사이트 접속&lt;/p&gt;

    &lt;p&gt;다음 주소를 브라우저에 입력합니다.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://livesql.oracle.com&quot; target=&quot;_blank&quot;&gt;https://livesql.oracle.com&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/001.png&quot; caption=&quot;Homepage Main&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Homepage Main&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/001.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;SQL Worksheet&lt;/code&gt; 메뉴를 선택합니다. 이때 &lt;u&gt;사이트에 로그인이 필요&lt;/u&gt;합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;SQL 입력창이 나타나면 아래의 SQL을 입력하여 실행해봅니다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;select * from emp;
&lt;/code&gt;&lt;/pre&gt;

    &lt;ul&gt;
      &lt;li&gt;현재는 세션에 사용자 테이블이 만들어져있지 않아서 오류가 발생합니다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;ORA-00942: table or view does not exist
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/002.png&quot; caption=&quot;SQL 실행&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;SQL 실행&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/002.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;테이블-직접-생성하여-사용하는-방법&quot;&gt;테이블 직접 생성하여 사용하는 방법&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;Code Library&lt;/code&gt;에서 &lt;code&gt;EMP and DEPT&lt;/code&gt; 를 실행하여 테이블을 생성합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code&gt;EMP and DEPT&lt;/code&gt; 라이브러리 선택&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/003.png&quot; caption=&quot;EMP and DEPT 라이브러리 선택&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;EMP and DEPT 라이브러리 선택&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/003.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code&gt;Run Script&lt;/code&gt; 버튼을 눌러 스크립트 실행하면 수행 여부를 확인합니다. &lt;code&gt;Perform Actions(s)&lt;/code&gt; 버튼을 누르세요.&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/004.png&quot; caption=&quot;스크립트 실행&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;스크립트 실행&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/004.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/005.png&quot; caption=&quot;스크립트 확인&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;스크립트 확인&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/005.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code&gt;SQL Worksheet&lt;/code&gt; 버튼을 눌러 SQL 창으로 이동합니다.&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/006.png&quot; caption=&quot;스크립트 완료&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;스크립트 완료&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/006.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SQL 실행&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;이제 &lt;code&gt;emp&lt;/code&gt;와 &lt;code&gt;dept&lt;/code&gt; 테이블이 생성되어 SQL문을 수행할 수 있습니다.&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/007.png&quot; caption=&quot;select emp table&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;select emp table&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/007.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;수행 할 SQL을 선택하고 &lt;code&gt;Run&lt;/code&gt; 버튼을 누르면 선택된 명령만 수행됩니다.&lt;/p&gt;

        &lt;p&gt;&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/008.png&quot; caption=&quot;select dept table&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;select dept table&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/008.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;기본-스키마를-사용하는-방법&quot;&gt;기본 스키마를 사용하는 방법&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;스키마 선택&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code&gt;Schema&lt;/code&gt; 메뉴를 선택하면 &lt;code&gt;My Schema&lt;/code&gt; 가 기본 선택되어있습니다. 콤보 박스를 눌러보면 다음과 같이 이미 등록된 여러 스키마를 볼 수 있습니다.
&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/009.png&quot; caption=&quot;Schema 선택&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Schema 선택&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/009.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;테이블 이름 앞에 스키마 이름을 추가해서 SQL문을 작성하면 기존에 존재하는 스키마를 모두 사용할 수 있습니다.
&lt;a href=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/010.png&quot; caption=&quot;Schema Select&quot;&gt;&lt;img src=&quot;assets/images/blank.png&quot; alt=&quot;Schema Select&quot; data-echo=&quot;assets/images/42c48740a84b48f6336e2d7585a56f74/010.840.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;기타&quot;&gt;기타&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;My Scripts&lt;/code&gt;에 직접 스크립트를 저장해서 일괄 수행할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;My Session&lt;/code&gt;에서 초기화를 하면 스크립트 수행으로 생성된 오브젝트들을 삭제하여 처음 상태로 돌아갈 수 있습니다.&lt;/li&gt;
  &lt;li&gt;결과는 최대 50줄만 보이며 전체 결과는 CSV 형태의 텍스트 문서로 다운로드 할 수 있습니다. &lt;code&gt;Actions&lt;/code&gt; 에서 최대 5000 까지 설정할 수도 있습니다.결&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;#Oracle&lt;/code&gt;, &lt;code&gt;#오라클&lt;/code&gt;, &lt;code&gt;Live SQL##&lt;/code&gt;, &lt;code&gt;#라이브 SQL&lt;/code&gt;, &lt;code&gt;#Database&lt;/code&gt;, &lt;code&gt;#DBMS&lt;/code&gt;, &lt;code&gt;#데이터베이스&lt;/code&gt;&lt;/p&gt;</content><author><name>Sangyong Bae</name></author><category term="Oracle" /><category term="DBMS" /><category term="SQL" /><summary type="html">Oracle Live SQL을 소개합니다.</summary></entry></feed>